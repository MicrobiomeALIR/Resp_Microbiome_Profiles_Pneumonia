---
title: "RespMicroProfiles_PNADX_FIM2018"
author: "Georgios Kitsios"
date: "6/22/2018"
output: html_document
---

###### R code for statistical and ecological analyses for the manuscript:
# "Respiratory microbiome profiling for etiologic diagnosis of pneumonia in mechanically ventilated patients."
# Author: Georgios D. Kitsios, MD, PhD

# load important libraries
library(dplyr)
library(readxl)
library(plyr)
library(ggplot2)
library(psych)
library(xlsx)
library(lubridate)
library(stargazer)
library(reshape2)
library(ggbeeswarm)
library(epitools)
library(vegan)
library(tidyr)
library(gdata)

############ Metadata dataframe of baseline data for all 56 subjects included: "pnadx_meta"

# filter dataframe for lung samples only to allow for descriptive stats calculations
pnadx_meta_lung <- filter(pnadx_meta, sampletype=="tracheal")

# Obtain descriptive statistics for respiratory culture positive (balposbasl==1) and negative (balposbasl==0) patients. 
# Use the library stargazer to automate calculations and output
stargazer(pnadx_meta_lung, type = "html", median = TRUE, iqr = TRUE, out = "...~USERDEFINED...")

# create a table that has all variables and then stratify tables by balposbasl vs not
# all - continuous variables
stargazer(subset(pnadx_meta_lung[c("Age", "BMI", "ICUstayduration",  "VFD", "SOFAScore", "lips_score", "HR", "SBP", "Temperature", "LowestMAP",   "PHa", "WBC", "Platelets", "Creatinine", "CO2", "WorstPFRatio", "TotalRR", "PEEP", "PeakInspiratory", "PlateauPressure", "TVmlperkg")]), type = "text", nobs=TRUE, mean.sd = TRUE, min.max = FALSE, median = TRUE, iqr = TRUE, title = "Descriptive statistics all", digits = 1, out = "...~USERDEFINED..."")

# all - categorical variable
stargazer(subset(pnadx_meta_lung[c("Gender", "HistDiabetes", "HistCOPD", "HistImmunosuppression", "HistCCF", "HistCRF", "IsActiveNeoplasm", "lips_pneumonia", "lips_sepsis", "lips_shock", "lips_aspiration",  "Mortality30Day", "Mortality90Day", "AKIFirstWeek")]), type = "text", nobs=TRUE, mean.sd = TRUE, min.max = FALSE,  title = "Descriptive statistics all categorical", digits = 2, out = "...~USERDEFINED..."")

# balposbasl - continuous variables
stargazer(subset(pnadx_meta_lung[c("Age", "BMI", "ICUstayduration",  "VFD", "SOFAScore", "lips_score", "HR", "SBP", "Temperature", "LowestMAP",   "PHa", "WBC", "Platelets", "Creatinine", "CO2", "WorstPFRatio", "TotalRR", "PEEP", "PeakInspiratory", "PlateauPressure", "TVmlperkg")], pnadx_meta_lung$balposbasl=="1"), type = "text", nobs=TRUE, mean.sd = TRUE, min.max = FALSE, median = TRUE, iqr = TRUE, title = "Descriptive statistics balpos", digits = 1, out = "...~USERDEFINED..."")

# balneg - continuous
stargazer(subset(pnadx_meta_lung[c("Age", "BMI", "ICUstayduration",  "VFD", "SOFAScore", "lips_score", "HR", "SBP", "Temperature", "LowestMAP",   "PHa", "WBC", "Platelets", "Creatinine", "CO2", "WorstPFRatio", "TotalRR", "PEEP", "PeakInspiratory", "PlateauPressure", "TVmlperkg")], pnadx_meta_lung$balposbasl=="0"), type = "text", nobs=TRUE, mean.sd = TRUE, min.max = FALSE, median = TRUE, iqr = TRUE, title = "Descriptive statistics balpos", digits = 1, out = "...~USERDEFINED..."")

# Next, do wilcoxon tests for continuous and fisher tests for categoricals variables to report p-values in table for # balpos vs negative 
# balpos vs negative  
# wilcox nonparametric
pcontbalposvsnot_wilcox<-sapply(pnadx_meta_lung[,c("Age", "BMI", "ICUstayduration",  "VFD", "SOFAScore", "lips_score", "HR", "SBP", "Temperature", "LowestMAP",   "PHa", "WBC", "Platelets", "Creatinine", "CO2", "WorstPFRatio", "TotalRR", "PEEP", "PeakInspiratory", "PlateauPressure", "TVmlperkg")], function(i) wilcox.test(i ~ pnadx_meta_lung$balposbasl)$p.value)
pcontbalposvsnot_wilcox<-data.frame(pcontbalposvsnot_wilcox)

# balpos vs negative  categorical - FIsher test
pcatbalposvsnot <-sapply(pnadx_meta_lung[,c("Gender", "HistDiabetes", "HistCOPD", "HistImmunosuppression", "HistCCF", "HistCRF", "IsActiveNeoplasm", "lips_pneumonia", "lips_sepsis", "lips_shock", "lips_aspiration",  "Mortality30Day", "Mortality90Day", "AKIFirstWeek")], function(i) fisher.test(i, pnadx_meta_lung$balposbasl)$p.value)
pcatbalposvsnot<-data.frame(pcatbalposvsnot)


######### ECOLOGICAL ANALYSES
## Perform basic ecological analyses from taxonomic frequencies at the genus level
## File with taxonomic and metadata: "pnadx_biom"

# define pathogen and oral bacteria variables from cx pos and cx neg distributions of taxa as explained in the manuscript (based on culture positivity and known composition of the supraglottic pneumotype of the healthy lung microbiome)

# pathogens
# staph
pnadx_biom$staph <- pnadx_biom$`Bacteria;Firmicutes;Bacilli;Bacillales;Staphylococcaceae;Staphylococcus` + pnadx_biom$`Bacteria;Firmicutes;Bacilli;Bacillales;Staphylococcaceae;Staphylococcaceae_unclassified`
# pseudomonas
pnadx_biom$pseudomonas <- pnadx_biom$`Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas` + pnadx_biom$`Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonadaceae_unclassified`
# Enterobacteriaceae
pnadx_biom$enterobacteriaceae <- pnadx_biom$`Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacteriales;Enterobacteriaceae;Enterobacteriaceae_unclassified`
# escherichia
pnadx_biom$escherichia <- pnadx_biom$`Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacteriales;Enterobacteriaceae;Escherichia-Shigella`
# fusobacterium
pnadx_biom$fusobacterium <- pnadx_biom$`Bacteria;Fusobacteria;Fusobacteriia;Fusobacteriales;Fusobacteriaceae;Fusobacterium`
# haemophilus
pnadx_biom$haemophilus <- pnadx_biom$`Bacteria;Proteobacteria;Gammaproteobacteria;Pasteurellales;Pasteurellaceae;Haemophilus`
# enterococcus 
pnadx_biom$enterococcus <- pnadx_biom$`Bacteria;Firmicutes;Bacilli;Lactobacillales;Enterococcaceae;Enterococcus`
# mycoplasma
pnadx_biom$mycoplasma <- pnadx_biom$`Bacteria;Tenericutes;Mollicutes;Mycoplasmatales;Mycoplasmataceae;Mycoplasma`

# create variable contpathogenabund
pnadx_biom <- mutate(pnadx_biom, contpathogenabund = pnadx_biom$staph + pnadx_biom$pseudomonas + pnadx_biom$enterobacteriaceae + pnadx_biom$escherichia + pnadx_biom$fusobacterium + pnadx_biom$haemophilus + pnadx_biom$enterococcus + pnadx_biom$mycoplasma)

# this variable has a break in ~ 50%. Use high anypathogenabund as >50% sequences for any pathogen. 
hist(pnadx_biom$contpathogenabund)
ggplot(pnadx_biom, aes(contpathogenabund)) + geom_density()

# anypathogenabund50 = any pathogen added up to >50% abundance
# eachpathogenabund50 = any specific pathogen to dominate >50% of community
pnadx_biom <- mutate (pnadx_biom, anypathogenabund50 = ifelse(pnadx_biom$contpathogenabund>0.5, 1, 0)) 
pnadx_biom <- mutate(pnadx_biom, eachpathogenabund50 = ifelse(staph >0.5 | pseudomonas >0.5 | enterobacteriaceae >0.5 | haemophilus >0.5 | escherichia>0.5 | fusobacterium >0.5 | enterococcus>0.5 | mycoplasma>0.5, 1, 0))
pnadx_biom$eachpathogenabund50 <- as.factor(pnadx_biom$eachpathogenabund50)
pnadx_biom$anypathogenabund50 <- as.factor(pnadx_biom$anypathogenabund50)


# ORAL taxa - for definitions of oral taxa as per the Segal Nat Microbiol 2016 paper (supraglottic pneumotype): Prevotella, Rothia, Streptococcus, Veiilonella, Selenomonas,  Neisseria, Gemellacea, Paraprevotellacea
#prevotella
pnadx_biom$prevotella <- pnadx_biom$`Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Prevotellaceae;Prevotella` + pnadx_biom$`Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Prevotellaceae;Prevotella_2` + pnadx_biom$`Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Prevotellaceae;Prevotella_6` + 
  pnadx_biom$`Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Prevotellaceae;Prevotella_7`
pnadx_biom$`Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Prevotellaceae;Prevotella_9` +
  pnadx_biom$`Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Prevotellaceae;Prevotellaceae_unclassified`
# Veillonella
pnadx_biom$veillonella <-pnadx_biom$`Bacteria;Firmicutes;Negativicutes;Selenomonadales;Veillonellaceae;Veillonella` + pnadx_biom$`Bacteria;Firmicutes;Negativicutes;Selenomonadales;Veillonellaceae;Veillonellaceae_unclassified`
# gemella
pnadx_biom$gemella <- pnadx_biom$`Bacteria;Firmicutes;Bacilli;Bacillales;Family_XI;Gemella`
# granulicatella
pnadx_biom$granulicattella <- pnadx_biom$`Bacteria;Firmicutes;Bacilli;Lactobacillales;Carnobacteriaceae;Granulicatella`
# rothia
pnadx_biom$rothia <- pnadx_biom$`Bacteria;Actinobacteria;Actinobacteria;Micrococcales;Micrococcaceae;Rothia`
# Neisseria
pnadx_biom$neisseria <- pnadx_biom$`Bacteria;Proteobacteria;Betaproteobacteria;Neisseriales;Neisseriaceae;Neisseria`
# Streptococcus 
pnadx_biom$streptococcus <- pnadx_biom$`Bacteria;Firmicutes;Bacilli;Lactobacillales;Streptococcaceae;Streptococcus`

# create variable contoralabund
pnadx_biom <- mutate(pnadx_biom, contoralabund = pnadx_biom$prevotella + pnadx_biom$veillonella + pnadx_biom$rothia + pnadx_biom$neisseria + pnadx_biom$streptococcus + pnadx_biom$granulicattella + pnadx_biom$gemella)

# this variable also has a break in ~ 50%. Use high anyoralabund as >50% sequences for any pathogen. 
hist(pnadx_biom$contoralabund)
ggplot(pnadx_biom, aes(contoralabund)) + geom_density()

# anyoralabund50 = any oral taxon added up to >50% abundance
# eachoralabund50 = any specific pathogen to dominate >50% of community
pnadx_biom <- mutate (pnadx_biom, anyoralabund50 = ifelse(pnadx_biom$contoralabund>0.5, 1, 0)) 
pnadx_biom <- mutate(pnadx_biom, eachoralabund50 = ifelse(prevotella >0.5 | veillonella >0.5 | rothia >0.5 | granulicattella >0.5 | gemella>0.5 | streptococcus >0.5 | neisseria>0.5, 1, 0))
pnadx_biom$anyoralabund50 <- as.factor(pnadx_biom$anyoralabund50)
pnadx_biom$eachoralabund50 <- as.factor(pnadx_biom$eachoralabund50)

# separate lung and oral datasets
pnadx_biom_lung <-filter(pnadx_biom, sampletype=="tracheal")
pnadx_biom_oral <-filter(pnadx_biom, sampletype=="oral")

# examine how pathogen and oral abundance is distributed in the dataset - as expected pathogen and oral are largely reciprocal when looking at them from balposbasl positivity - the other stratification factors did not accomplish such separation 
ggplot(pnadx_biom_lung, aes(contpathogenabund)) + geom_density(aes(group=pnadx_biom_lung$balposbasl, fill = pnadx_biom_lung$balposbasl, alpha = 0.2))
ggplot(pnadx_biom, aes(contoralabund)) + geom_density(aes(group=pnadx_biom$balposbasl, fill = pnadx_biom$balposbasl, alpha = 0.2))
# distribution by eachpathogenabund50
ggplot(pnadx_biom, aes(contpathogenabund)) + geom_density(aes(group=pnadx_biom$eachpathogenabund50, fill = pnadx_biom$eachpathogenabund50, alpha = 0.2))
ggplot(pnadx_biom, aes(contoralabund)) + geom_density(aes(group=pnadx_biom$anypathogenabund50, fill = pnadx_biom$anypathogenabund50, alpha = 0.2))

pnadx_biom_lung$balposbasl<- as.factor(pnadx_biom_lung$balposbasl)

# publishable graph for relative pathogen abundance
ggplot(pnadx_biom_lung, aes(contpathogenabund)) + geom_density(aes(group=pnadx_biom_lung$balposbasl, fill = pnadx_biom_lung$balposbasl, alpha = 0.2)) + xlab("Relative Pathogen Abundance") + theme(legend.position = 'none', axis.text.x = element_text(size=24, face="bold"), axis.text.y = element_text(face="bold", size = 12), axis.title.y = element_text(size=18),  title =element_text(size=30, face='bold')) +  scale_fill_manual(values=c("turquoise", "red")) + geom_text(size=14, aes(0.78, 4, label="Cx positive", colour="red")) + geom_text(size = 14, aes(0.23, 4.5, label="Cx negative", colour="turquoise"))

# publishable graph for relative oral abundance
ggplot(pnadx_biom_lung, aes(contoralabund)) + geom_density(aes(group=pnadx_biom_lung$balposbasl, fill = pnadx_biom_lung$balposbasl, alpha = 0.2)) + xlab("Relative Oral Taxa Abundance") + theme(legend.position = 'none', axis.text.x = element_text(size=24, face="bold"), axis.text.y = element_text(face="bold", size = 12), axis.title.y = element_text(size=18),  title =element_text(size=30, face='bold')) +  scale_fill_manual(values=c("turquoise", "red")) + geom_text(size=14, aes(0.25, 4.2, label="Cx positive", colour="red")) + geom_text(size = 14, aes(0.7, 2, label="Cx negative", colour="turquoise"))


#### Beta diversity analyses with vegan
# Use the taxa table: "ALIR_taxa_genus_summary_table_clean"

# perform beta-diversity analyses in vegan for oral/lung by pneumonia vs not and by cx positivity vs not

#filter for samples in the pnadx dataset
pnadx_vegan <-  subset(ALIR_taxa_genus_summary_table_clean, select = -Total)
pnadx_vegan <- filter(pnadx_vegan, Sample_ID %in% pnadx_meta_SampleIDs)
#sort by Sample_ID variable and confirm they are equal
pnadx_meta <- arrange(pnadx_meta, Sample_ID)
pnadx_vegan <- arrange(pnadx_vegan, Sample_ID)
pnadx_vegan$Sample_ID
pnadx_meta$Sample_ID # confirmed that these are aligned properly. 

# now remove Sample_ID from taxa table to ensure all are numeric
pnadx_vegan<- subset(pnadx_vegan, select = -Sample_ID)

# create new factor of balcx positivity and site
pnadx_meta$balposbasl[is.na(pnadx_meta$balposbasl)]<- 0
pnadx_meta <- mutate(pnadx_meta, balcx_site = ifelse(pnadx_meta$balposbasl==1 & pnadx_meta$sampletype=="tracheal", "lungcxpos", NA))
pnadx_meta <- mutate(pnadx_meta, balcx_site = ifelse(pnadx_meta$balposbasl==1 & pnadx_meta$sampletype=="oral", "oralcxpos", pnadx_meta$balcx_site))
pnadx_meta <- mutate(pnadx_meta, balcx_site = ifelse(pnadx_meta$balposbasl==0 & pnadx_meta$sampletype=="oral", "oralcxneg", pnadx_meta$balcx_site))
pnadx_meta <- mutate(pnadx_meta, balcx_site = ifelse(pnadx_meta$balposbasl==0 & pnadx_meta$sampletype=="tracheal", "lungcxneg", pnadx_meta$balcx_site))
pnadx_meta$balcx_site <-as.factor(pnadx_meta$balcx_site)

# balcx_site
pnadx_vegan_mds <- metaMDS(pnadx_vegan, noshare =TRUE, k = 3) # stress 0.17
# define factor for ordination plot
fac <- pnadx_meta$balcx_site

# NMDS plot for balcx_site
plot(pnadx_vegan_mds, disp="sites", type = "n", xlim=c(-0.9, 0.9), ylim=c(-0.9, 0.9))
points(pnadx_vegan_mds, disp="sites", pch=21, col = "#FF0000",  cex = 2, select=which(fac=="lungcxpos"))
points(pnadx_vegan_mds, disp="sites", pch=24, col = "#FF0000",  cex = 2, select=which(fac=="oralcxpos"))
points(pnadx_vegan_mds, disp="sites", pch=24, col = "#3399FF",  cex = 2, select=which(fac=="oralcxneg"))
points(pnadx_vegan_mds, disp="sites", pch=21, col = "#3399FF",  cex = 2, select=which(fac=="lungcxneg"))
ordiellipse(pnadx_vegan_mds, group=fac, show.groups="lungcxpos", col = "#FF0000", lwd = 2)
ordiellipse(pnadx_vegan_mds, group=fac, show.groups="oralcxpos", col = "#FF0000", lwd = 2)
ordiellipse(pnadx_vegan_mds, group=fac, show.groups="oralcxneg", col = "#3399FF", lwd = 2)
ordiellipse(pnadx_vegan_mds, group=fac, show.groups="lungcxneg", col = "#3399FF", lwd = 2)
ordispider(pnadx_vegan_mds, group=fac, show.groups="oralcxpos", col = "#FF0000", label = TRUE)
ordispider(pnadx_vegan_mds, group=fac, show.groups="oralcxneg", col = "#CCCCCC", label = TRUE)
ordispider(pnadx_vegan_mds, group=fac, show.groups="lungcxneg", col = "#CCCCCC", label = TRUE)
ordispider(pnadx_vegan_mds, group=fac, show.groups="lungcxpos", col = "#FF0000", label = TRUE)

# adonis
betadivbybalcx_site <- betadiver(pnadx_vegan, "z")
adonis(betadivbybalcx_site ~ balcx_site, pnadx_meta, perm=1000)
        #           Df SumsOfSqs MeanSqs F.Model      R2   Pr(>F)    
# balcx_site   3    2.0614 0.68714  2.8393 0.07438 0.000999 ***.06368 0.000999 ***


### vegan analyses for lung samples only
#filter for samples in the pnadx dataset
pnadx_vegan_lung <-  subset(ALIR_taxa_genus_summary_table_clean, select = -Total)
pnadx_meta_lung_sampleids <- pnadx_meta_lung$Sample_ID
pnadx_vegan_lung <- filter(pnadx_vegan_lung, Sample_ID %in% pnadx_meta_lung_sampleids)
#sort by Sample_ID variable and confirm they are equal
pnadx_vegan_lung <- arrange(pnadx_vegan_lung, Sample_ID)
pnadx_meta_lung <- arrange(pnadx_meta_lung, Sample_ID)
pnadx_meta_lung$Sample_ID
pnadx_vegan_lung$Sample_ID # confirmed that these are aligned properly. 

# now remove Sample_ID from taxa table to ensure all are numeric
pnadx_vegan_lung<- subset(pnadx_vegan_lung, select = -Sample_ID)

# BAL pos
pnadx_meta_lung$balposbasl <-as.character(pnadx_meta_lung$balposbasl)
pnadx_meta_lung$balposbasl[pnadx_meta_lung$balposbasl=="0"] <- "RespCxNeg"
pnadx_meta_lung$balposbasl[pnadx_meta_lung$balposbasl=="1"] <- "RespCxPos"
pnadx_meta_lung$balposbasl <-as.factor(pnadx_meta_lung$balposbasl)

# define factor for ordination plot
fac <- pnadx_meta_lung$balposbasl
attach(pnadx_meta_lung)
# NMDS plot for BALPOS
plot(pnadx_pneumonia_mds, disp="sites", type = "n", xlim=c(-1.2, 1.2), ylim=c(-1.2, 1.2))
points(pnadx_pneumonia_mds, disp="sites", pch=21, col = "#FF3333",  cex = 2, select=which(fac=="RespCxPos"))
points(pnadx_pneumonia_mds, disp="sites", pch=24, col = "#0099FF",  cex = 2, select=which(fac=="RespCxNeg"))
ordiellipse(pnadx_pneumonia_mds, group=fac, show.groups="RespCxPos", col = "#FF3333", lwd = 2)
ordiellipse(pnadx_pneumonia_mds, group=fac, show.groups="RespCxNeg", col = "#0099FF", lwd = 2)
ordispider(pnadx_pneumonia_mds, group=fac, show.groups="RespCxNeg", col = "#0099FF", label = TRUE)
ordispider(pnadx_pneumonia_mds, group=fac, show.groups="RespCxPos", col = "#FF3333", label = TRUE)


# perform permanova based on the variable balpos for formal comparison
betadivbybalpos <- betadiver(pnadx_vegan_lung, "z")
adonis(betadivbybalpos~balposbasl, pnadx_meta_lung, perm=1000)
#       Df SumsOfSqs MeanSqs F.Model      R2   Pr(>F)   
# balposbasl  1    0.7047 0.70474  2.7197 0.04795 0.002997 **



# vegan analyses for oral only
pnadx_vegan_oral <-  subset(ALIR_taxa_genus_summary_table_clean, select = -Total)
pnadx_meta_oral <- filter(pnadx_meta, sampletype=="oral")
pnadx_meta_oral_sampleids <- pnadx_meta_oral$Sample_ID
pnadx_vegan_oral <- filter(pnadx_vegan_oral, Sample_ID %in% pnadx_meta_oral_sampleids)
#sort by Sample_ID variable and confirm they are equal
pnadx_vegan_oral <- arrange(pnadx_vegan_oral, Sample_ID)
pnadx_meta_oral <- arrange(pnadx_meta_oral, Sample_ID)
pnadx_meta_oral$Sample_ID
pnadx_vegan_oral$Sample_ID # confirmed that these are aligned properly. 

# now remove Sample_ID from taxa table to ensure all are numeric
pnadx_vegan_oral<- subset(pnadx_vegan_oral, select = -Sample_ID)
# BAL pos
pnadx_meta_oral$balposbasl <-as.character(pnadx_meta_oral$balposbasl)
pnadx_meta_oral$balposbasl[pnadx_meta_oral$balposbasl=="0"] <- "RespCxNeg"
pnadx_meta_oral$balposbasl[pnadx_meta_oral$balposbasl=="1"] <- "RespCxPos"
pnadx_meta_oral$balposbasl <-as.factor(pnadx_meta_oral$balposbasl)

# define factor for ordination plot
fac <- pnadx_meta_oral$balposbasl

# NMDS plot for BALPOS
plot(pnadx_oral_mds, disp="sites", type = "n", xlim=c(-1.2, 1.2), ylim=c(-1.2, 1.2))
points(pnadx_oral_mds, disp="sites", pch=21, col = "#FF3333",  cex = 2, select=which(fac=="RespCxPos"))
points(pnadx_oral_mds, disp="sites", pch=24, col = "#0099FF",  cex = 2, select=which(fac=="RespCxNeg"))
ordiellipse(pnadx_oral_mds, group=fac, show.groups="RespCxPos", col = "#FF3333", lwd = 2)
ordiellipse(pnadx_oral_mds, group=fac, show.groups="RespCxNeg", col = "#0099FF", lwd = 2)
ordispider(pnadx_oral_mds, group=fac, show.groups="RespCxNeg", col = "#0099FF", label = TRUE)
ordispider(pnadx_oral_mds, group=fac, show.groups="RespCxPos", col = "#FF3333", label = TRUE)

# perform permanova based on the variable balpos for formal comparison
betadivbybalpos <- betadiver(pnadx_vegan_oral, "z")
adonis(betadivbybalpos~balposbasl, pnadx_meta_oral, perm=1000)
#       Df SumsOfSqs MeanSqs F.Model     R2   Pr(>F)    
# balposbasl  1    0.7113 0.71130  3.1721 0.0575 0.000999 ***
# impressive difference in oral communities. 


#### Alpha diversity analyses
# alpha diversity analyses
###### create publishable graphs for alpha diversity comparisons between  pneumonia and balcxpos

pnadx_alphadivgraphdataset_lung <- subset(pnadx_meta_lung, select = c(Sample_ID, shannon, dominance, lips_aspiration, balposbasl, lips_pneumonia, cxposbasl))
# make long format to enable simultaneous presentation of shannon and dominance
library(tidyr)
pnadx_alphadivgraphdataset_lung_long <- gather(pnadx_alphadivgraphdataset_lung, alphadiv, measurement, shannon:dominance, factor_key = TRUE)
View(pnadx_alphadivgraphdataset_lung_long)

# balpos
ggplot(pnadx_alphadivgraphdataset_lung_long, aes(x = balposbasl, y = measurement, fill = balposbasl)) + 
  geom_boxplot(lwd=0.8,  outlier.shape = 8) + 
  geom_jitter(width = 0.1,  size = 8, shape = 1)  + 
  facet_wrap(~alphadiv, scales = "free_y") + 
  ylab("alpha diversity metric") + 
  xlab("Respiratory Cultures") + 
  theme(legend.position = 'none', axis.text.x = element_text(size=20, face="bold"), axis.text.y = element_text(face="bold", size = 16), axis.title.y = element_text(size=14),  title =element_text(size=30, face='bold')) +
  theme(strip.text = element_text(face="bold",  size = 20, colour = "blue")) + 
  theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour="gray")) + scale_fill_manual(values = c("#0099FF", "#CC0000"))  + 
  scale_x_discrete(labels = c("Negative", "Positive"))

# statistical testing for shannon and dominance by balposbasl
wilcox.test(pnadx_meta_lung$shannon ~ pnadx_meta_lung$balposbasl) # 0.02168
wilcox.test(pnadx_meta_lung$dominance ~ pnadx_meta_lung$balposbasl) # 0.0413



#### ################# Taxonomic composition in culture positive and negative cases
# define "other" abundance in biom file
pnadx_biom_lung$other <- 1- (pnadx_biom_lung$contpathogenabund + pnadx_biom_lung$contoralabund)
pnadx_biom_lung
pnadx_biom_lung$balposbasl[is.na(pnadx_biom_lung$balposbasl)] <-0
pnadx_biom_lung$cxposbasl [is.na(pnadx_biom_lung$cxposbasl)] <-0
pnadx_biom_lung$bloodcxposbasl[is.na(pnadx_biom_lung$bloodcxposbasl)] <-0
pnadx_biom_lung$balposbasl <- as.factor(pnadx_biom_lung$balposbasl)


# filter balpos and negative files
pnadx_biom_lung_balpos <- filter(pnadx_biom_lung, balposbasl==1)
pnadx_biom_lung_balneg <- filter(pnadx_biom_lung, balposbasl==0)

# select only relevant taxa plus other
pnadx_biom_lung_balpos_taxa <- subset(pnadx_biom_lung_balpos, select = c(Sample_ID,  staph , pseudomonas, enterobacteriaceae , escherichia , fusobacterium , haemophilus , enterococcus , mycoplasma, prevotella , veillonella , rothia, neisseria, streptococcus, granulicattella, gemella, other))

# transpose dataset 
## https://stackoverflow.com/questions/7970179/transposing-a-dataframe-maintaining-the-first-column-as-heading
# https://stackoverflow.com/questions/29511215/convert-row-names-into-first-column
pnadx_biom_lung_balpos_taxa_transposed <- as.data.frame(t(pnadx_biom_lung_balpos_taxa[, -1]))
colnames(pnadx_biom_lung_balpos_taxa_transposed) <- pnadx_biom_lung_balpos_taxa$Sample_ID
pnadx_biom_lung_balpos_taxa_transposed$taxon <- rownames(pnadx_biom_lung_balpos_taxa_transposed)

# melt dataset for visualizations
lungbalpostaxa <- melt(pnadx_biom_lung_balpos_taxa_transposed, id.vars = "taxon", variable.name = "SampleID", value.name = "abundance")
lungbalpostaxa$Taxa <- as.factor(lungbalpostaxa$taxon)
ggplot(lungbalpostaxa, aes(x=SampleID, y = abundance, fill = Taxa)) + geom_bar(stat="identity", colour = "black")

# reorder taxa
lungbalpostaxa$Taxa  <- ordered(lungbalpostaxa$Taxa , levels = c("staph", "pseudomonas", "enterobacteriaceae" , "escherichia", "fusobacterium" , "haemophilus", "enterococcus", "mycoplasma", "prevotella", "veillonella", "rothia", "neisseria", "streptococcus", "granulicattella", "gemella", "other"))

ggplot(lungbalpostaxa, aes(x=SampleID, y = abundance, fill = Taxa)) + geom_bar(stat="identity") + theme_classic() 


# create color pallette
# http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
colorpalette_lungbaltaxa <- c("#990066","#FF0066", "#FF0000", "#FF6666", "#CC6666",  "#990000",  "#996666", "#FF6633", 
                              "#3399FF", "#0066CC", "#003366", "#66CCFF", "#00CCFF", "#00FFFF", "#CCFFFF",
                              "#CCCCCC")

# reorder observations in trach_balpos_taxa dataset to have concordant cases first and discordant later

lungbalpostaxa_order <- c("0102.1031.1.T", "0102.3769.1.T", "0102.3995.1.T",  "0102.3699.1.T.N", "0102.47.1.T",  "0102.3476.1.T", "0102.3508.1.T", "0102.3673.1.T", "0102.3772.1.T", "0102.3931.3.T.2", "0102.3734.1.T", "0102.3902.1.T")


library(gdata)
# http://stackoverflow.com/questions/11977102/order-data-frame-rows-according-to-a-target-vector-that-specifies-the-desired-or
lungbalpostaxa$SampleID <- reorder.factor(lungbalpostaxa$SampleID, new.order = lungbalpostaxa_order)

# optimize label with italics/capitals for taxa names. 

lungbalpostaxa_2 <- lungbalpostaxa
lungbalpostaxa_2$Taxa <- as.character(lungbalpostaxa_2$Taxa)
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="staph"] <- "Staphylococcus"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="pseudomonas"] <- "Pseudomonas"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="enterobacteriaceae"] <- "Enterobacteriaceae"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="escherichia"] <- "Escherichia"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="fusobacterium"] <- "Fusobacterium"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="haemophilus"] <- "Haemophilus"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="enterococcus"] <- "Enterococcus"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="mycoplasma"] <- "Mycoplasma"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="prevotella"] <- "Prevotella"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="veillonella"] <- "Veillonella"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="rothia"] <- "Rothia"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="neisseria"] <- "Neisseria"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="streptococcus"] <- "Streptococcus"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="granulicattella"] <- "Granulicattella"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="gemella"] <- "Gemella"
lungbalpostaxa_2$Taxa[lungbalpostaxa_2$Taxa=="other"] <- "Other"
lungbalpostaxa_2$Taxa <- as.factor(lungbalpostaxa_2$Taxa)
View(lungbalpostaxa_2)

lungbalpostaxa_2$Taxa  <- ordered(lungbalpostaxa_2$Taxa , levels = c("Staphylococcus", "Pseudomonas", "Enterobacteriaceae" , "Escherichia", "Fusobacterium" , "Haemophilus", "Enterococcus", "Mycoplasma", "Prevotella", "Veillonella", "Rothia", "Neisseria", "Streptococcus", "Granulicattella", "Gemella", "Other"))

ggplot(lungbalpostaxa_2, aes(x=SampleID, y = abundance, fill = Taxa)) + geom_bar(stat="identity", colour = "black") +  
  scale_fill_manual(breaks = c("Staphylococcus", "Pseudomonas", "Enterobacteriaceae" , "Escherichia", "Fusobacterium" , "Haemophilus", "Enterococcus", "Mycoplasma", "Prevotella", "Veillonella", "Rothia", "Neisseria", "Streptococcus", "Granulicattella", "Gemella", "Other"), values = colorpalette_lungbaltaxa)  + 
  ggtitle("Taxonomic composition for culture positive samples") + 
  scale_x_discrete(breaks = NULL) + xlab("") + ylab("Relative Abundance") + 
  theme(legend.position = 'bottom', axis.text.y = element_text(face="bold"))  + 
  theme(strip.background = element_blank(), strip.text = element_blank(), title = element_text(size=14, face='bold'), legend.text = element_text(size=14, face="italic")) +
  geom_text(aes(1, 0.5, label = "S.aureus", angle = 90), size = 8, colour = "black") + 
  geom_text(aes(2, 0.6, label = "S.aureus", angle = 90), size = 8, colour = "black") +
  geom_text(aes(3, 0.7, label = "S.aureus", angle = 90), size = 8, colour = "black") + 
  geom_text(aes(4, 0.8, label = "S.aureus", angle = 90), size = 6, colour = "black") + 
  geom_text(aes(5, 0.9, label = "S.aureus", angle = 90), size = 3, colour = "black") +
  geom_text(aes(5, 0.5, label = "H. Flu", angle = 90), size = 6, colour = "black") +
  geom_text(aes(6, 0.6, label = "Pseudomonas", angle = 90), size = 7, colour = "black") +
  geom_text(aes(7, 0.5, label = "Klebsiella", angle = 90), size = 7, colour = "black") +
  geom_text(aes(8, 0.5, label = "Klebsiella", angle = 90), size = 7, colour = "black") +
  geom_text(aes(9, 0.5, label = "E.coli", angle = 90), size = 7, colour = "black") +
  geom_text(aes(10, 0.87, label = "Klebsiella", angle = 90), size = 4, colour = "black") +
  geom_text(aes(11, 0.98, label = "Staph"), size = 4, colour = "black") + 
  geom_text(aes(10, 0.5, label = "-"), size = 15, colour = "black") + 
  geom_text(aes(11, 0.5, label = "-"), size = 15, colour = "black") + 
  geom_text(aes(12, 0.5, label = "-"), size = 15, colour = "black") + 
  geom_segment(aes(x=0.5, y=-0.05, xend=9, yend=-0.05)) + 
  geom_segment(aes(x=10, y=-0.08, xend=12.5, yend=-0.08), linetype = "dashed") + 
  geom_text(aes(3, -0.08, label = "Culture concordance"), size = 8, colour = "black") + 
  geom_text(aes(11, -0.10, label = "Culture discordance"), size = 5, colour = "black") +
  geom_text(aes(1, 1.04, label = "1"), size = 4, colour = "blue") + 
  geom_text(aes(2, 1.04, label = "2"), size = 4, colour = "blue") + 
  geom_text(aes(3, 1.04, label = "3"), size = 4, colour = "blue") + 
  geom_text(aes(4, 1.04, label = "4"), size = 4, colour = "blue") + 
  geom_text(aes(5, 1.04, label = "5"), size = 4, colour = "blue") + 
  geom_text(aes(6, 1.04, label = "6"), size = 4, colour = "blue") + 
  geom_text(aes(7, 1.04, label = "7"), size = 4, colour = "blue") + 
  geom_text(aes(8, 1.04, label = "8"), size = 4, colour = "blue") + 
  geom_text(aes(9, 1.04, label = "9"), size = 4, colour = "blue") + 
  geom_text(aes(10, 1.04, label = "10"), size = 4, colour = "blue") + 
  geom_text(aes(11, 1.04, label = "11"), size = 4, colour = "blue") + 
  geom_text(aes(12, 1.04, label = "12"), size = 4, colour = "blue") + 
  geom_text(aes(5.3, 1.04, label="#"), size=4, colour = "black") +
  geom_text(aes(11.3, 1.04, label="#"), size=4, colour = "black") 
  
  
####################### taxonomic composition of balneg samples

# select only relevant taxa plus other
pnadx_biom_lung_balneg_taxa <- subset(pnadx_biom_lung_balneg, select = c(Sample_ID,  staph , pseudomonas, enterobacteriaceae , escherichia , fusobacterium , haemophilus , enterococcus , mycoplasma, prevotella , veillonella , rothia, neisseria, streptococcus, granulicattella, gemella, other))
# remove sample 0102.3818.1.T
pnadx_biom_lung_balneg_taxa <- pnadx_biom_lung_balneg_taxa[-23, ]

# transpose dataset 
## https://stackoverflow.com/questions/7970179/transposing-a-dataframe-maintaining-the-first-column-as-heading
# https://stackoverflow.com/questions/29511215/convert-row-names-into-first-column
pnadx_biom_lung_balneg_taxa_transposed <- as.data.frame(t(pnadx_biom_lung_balneg_taxa[, -1]))
colnames(pnadx_biom_lung_balneg_taxa_transposed) <- pnadx_biom_lung_balneg_taxa$Sample_ID
pnadx_biom_lung_balneg_taxa_transposed$taxon <- rownames(pnadx_biom_lung_balneg_taxa_transposed)

# melt dataset for visualizations
lungbalnegtaxa <- melt(pnadx_biom_lung_balneg_taxa_transposed, id.vars = "taxon", variable.name = "SampleID", value.name = "abundance")
lungbalnegtaxa$Taxa <- as.factor(lungbalnegtaxa$taxon)
ggplot(lungbalnegtaxa, aes(x=SampleID, y = abundance, fill = Taxa)) + geom_bar(stat="identity", colour = "black")

# reorder taxa
lungbalnegtaxa$Taxa  <- ordered(lungbalnegtaxa$Taxa , levels = c("staph", "pseudomonas", "enterobacteriaceae" , "escherichia", "fusobacterium" , "haemophilus", "enterococcus", "mycoplasma", "prevotella", "veillonella", "rothia", "neisseria", "streptococcus", "granulicattella", "gemella", "other"))

# reorder SampleIDs
lungbalnegtaxa_order <- c("0102.1819.1.T.N", "0102.3964.1.T", "0102.3927.1.T.2",  "0102.3935.1.T" , "0102.3966.1.T.2", "0102.3928.1.T", "0102.3987.1.T", "0102.3774.1.T", "0102.3862.1.T", "0102.3904.1.T",  "0102.1357.1.T.N", "0102.1767.1.T", "0102.1971.1.T",   "0102.3189.1.T.N", "0102.3538.1.T",    "0102.3641.1.T", "0102.3644.1.T", "0102.3645.1.T", "0102.3646.1.T", "0102.3672.1.T", "0102.3731.1.T", "0102.3732.1.T", "0102.3747.1R.T",   "0102.3768.1.T", "0102.3770.1.T", "0102.3771.1.T", "0102.3775.1.T", "0102.3801.1.T", "0102.3838.1.T", "0102.3847.1.T", "0102.3864.1.T","0102.3497.3.T", "0102.3901.1.T", "0102.3930.1.T", "0102.3986.1.T.2", "0102.3932.1.T", "0102.3933.1.T", "0102.3996.1.T", "0102.3934.1.T", "0102.4048.1.T", "0102.4055.1.T", "0102.3881.1.T.2")   

library(gdata)
# http://stackoverflow.com/questions/11977102/order-data-frame-rows-according-to-a-target-vector-that-specifies-the-desired-or
lungbalnegtaxa$SampleID <- reorder.factor(lungbalnegtaxa$SampleID, new.order = lungbalnegtaxa_order)

# graph for culture negative samples#################################
ggplot(lungbalnegtaxa, aes(x=SampleID, y = abundance, fill = Taxa)) + 
  geom_bar(stat="identity", colour = "black") +  
  scale_fill_manual(values = colorpalette_lungbaltaxa) + 
  scale_x_discrete(breaks = NULL) + 
  ggtitle("Taxonomic composition for culture negative samples") + xlab("") + ylab("Relative Abundance") + 
  theme(legend.position = 'bottom',axis.text.y = element_text(face="bold"), legend.text = element_text(size=15, face="bold"))  + theme(strip.background = element_blank(), strip.text = element_blank(), title = element_text(size=14, face='bold')) + 
  geom_segment(aes(x=0.5, y=-0.03, xend=9, yend=-0.03), size = 2, linetype = "solid", colour = "red") + 
  geom_segment(aes(x=10, y=-0.04, xend=44, yend=-0.04), size = 2, linetype = "longdash", colour = "blue") + 
  geom_text(aes(4.1, -0.08, label = "Missed pathogens"), size = 5, colour = "red") + 
  geom_text(aes(25, -0.08, label = "Oral taxa abundance"), size = 8, colour = "blue") 


# graph without legend to combine with balposbasl

# graph for culture negative samples#################################
ggplot(lungbalnegtaxa, aes(x=SampleID, y = abundance, fill = Taxa)) + 
  geom_bar(stat="identity", colour = "black") +  
  scale_fill_manual(values = colorpalette_lungbaltaxa) + 
  scale_x_discrete(breaks = NULL) + 
  ggtitle("Taxonomic composition for culture negative samples") + xlab("") + ylab("Relative Abundance") + 
  theme(legend.position = 'none',axis.text.y = element_text(face="bold"), legend.text = element_text(size=15, face="bold"))  + theme(strip.background = element_blank(), strip.text = element_blank(), title = element_text(size=14, face='bold')) + 
  geom_segment(aes(x=0.5, y=-0.03, xend=9, yend=-0.03), size = 2, linetype = "solid", colour = "red") + 
  geom_segment(aes(x=10, y=-0.04, xend=44, yend=-0.04), size = 2, linetype = "longdash", colour = "blue") + 
  geom_text(aes(5, -0.08, label = "Missed pathogens"), size = 5, colour = "red") + 
  geom_text(aes(25, -0.08, label = "Oral taxa abundance"), size = 8, colour = "blue") + 
  geom_text(aes(14.1, 1.03, label="#"), size=4, colour = "black") +
  geom_text(aes(22.1, 1.03, label="#"), size=4, colour = "black") +
  geom_text(aes(23.1, 1.03, label="#"), size=4, colour = "black") +
  geom_text(aes(26.1, 1.03, label="#"), size=4, colour = "black") 
  
  
####### diagnostic framework for eachpathogen abund 50. 
# remove obs 31 from pnadx_biom_lung as this was removed at clean up phase in qiime
pnadx_biom_lung <- pnadx_biom_lung[-31, ]

oddsratio.fisher(pnadx_biom_lung$eachpathogenabund50, pnadx_biom_lung$balposbasl) # OR 20.2 (3.4-224.3), p<10-5. 
oddsratio.fisher(pnadx_biom_lung$anypathogenabund50, pnadx_biom_lung$balposbasl) # OR 38.2 (4.5-1817.6), p<10-5. 

# look at negative associations with oral taxa abundance
oddsratio.small(pnadx_biom_lung$eachoralabund50, pnadx_biom_lung$balposbasl)  # highly statistically significant
oddsratio.small(pnadx_biom_lung$anyoralabund50, pnadx_biom_lung$balposbasl) # highly statistically significant and clinically more relevant, indicating that if >50% of the community is occupied by oral taxa, then chances of a positive culture are extremely low
# OR 0.08 0.0007744463 0.2586769. p<10-6
  

#biomarker graphs
# use the facet_wrap function to create nice publishable graphs, but this needs a gather function of the dataset. 
# http://www.sthda.com/english/wiki/tidyr-crucial-step-reshaping-data-with-r-for-easier-analyses
pnadx_4biomarkergraphs <- subset(pnadx_biom_lung, select = c(subjectid, grouplips, balposbasl,eachpathogenabund50, anypathogenabund50,  il6_rd, rage_rd, tnfr1_rd ,il8_rd, ))
# change variable names to make them look nice for graph. 
colnames(pnadx_4biomarkergraphs)[colnames(pnadx_4biomarkergraphs)=='il6_rd'] <- 'IL-6'
colnames(pnadx_4biomarkergraphs)[colnames(pnadx_4biomarkergraphs)=='rage_rd'] <- 'RAGE'
colnames(pnadx_4biomarkergraphs)[colnames(pnadx_4biomarkergraphs)=='tnfr1_rd'] <- 'TNFR1'
colnames(pnadx_4biomarkergraphs)[colnames(pnadx_4biomarkergraphs)=='il8_rd'] <- 'IL-8'


library(tidyr)
# convert to long inorder to graph cytokine variable

pnadx_4biomarkergraphs_long <- gather(pnadx_4biomarkergraphs, cytokine, value,`IL-10`:`PCT`, factor_key = TRUE)
View(pnadx_4biomarkergraphs_long)

# Graph:
ggplot(pnadx_4biomarkergraphs_long, aes(x = eachpathogenabund50, y = value, fill = eachpathogenabund50), show.legend=F) + 
  geom_boxplot(lwd=0.8,  notch = FALSE, aes(group=pnadx_4biomarkergraphs_long$eachpathogenabund50), alpha=0.3) +
  geom_jitter(width = 0.1, size=4, aes(shape = factor(pnadx_4biomarkergraphs_long$balposbasl)), show.legend=F)  +
  facet_wrap(~cytokine, scales = "free_y") + 
  scale_shape_manual(values = c(1, 16)) +
  theme(legend.position = 'none') + 
  xlab("Pathogen Abundance") + 
  ylab("biomarker log-concentrations (pg/ml)") +
  theme(legend.position = 'none', axis.text.x = element_text(size=20, face="bold"), axis.text.y = element_text(face="bold", size = 12), axis.title.y = element_text(size=14),  title =element_text(size=20, face='bold')) + 
  theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour="gray"), strip.text = element_text(face="bold",  size = 20, colour = "black")) + 
  scale_x_discrete(labels = c("< 50%", "> 50%")) + 
  scale_fill_manual(values = c( "#CCFFFF", "#FFCCCC")) + 
  scale_colour_manual(values=c("black", "red", "blue"))  

# examine associations of biomarkers with pathogen abundance >50%

# examine independence of biomarker association to culture positivity
# entire cohort
# il6
fit <- lm(il6_rd ~ eachpathogenabund50,   data=pnadx_biom_lung)
summary(fit)
fit <- lm(il6_rd ~ eachpathogenabund50 + balposbasl,   data=pnadx_biom_lung)
summary(fit)

# rage
fit <- lm(rage_rd~ eachpathogenabund50,   data=pnadx_biom_lung)
summary(fit)
fit <- lm(rage_rd~ eachpathogenabund50 + balposbasl,   data=pnadx_biom_lung)
summary(fit)

# tnfr1
fit <- lm(tnfr1_rd~ eachpathogenabund50,   data=pnadx_biom_lung)
summary(fit)
fit <- lm(tnfr1_rd~ eachpathogenabund50 + balposbasl,   data=pnadx_biom_lung)
summary(fit)

# il8
fit <- lm(il8_rd~ eachpathogenabund50,   data=pnadx_biom_lung)
summary(fit)  
fit <- lm(il8_rd~ eachpathogenabund50 + balposbasl,   data=pnadx_biom_lung)
summary(fit)


# procalcitonin
fit <- lm(procalcitonin_rd~ eachpathogenabund50,   data=pnadx_biom_lung)
summary(fit)
fit <- lm(procalcitonin_rd~ eachpathogenabund50 + balposbasl,   data=pnadx_biom_lung)
summary(fit)


